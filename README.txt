▎README

▎Цель проекта

Данный проект направлен на применение знаний, полученных в модуле, путем решения задачи повышенного уровня сложности.

▎Задание

▎"Раз, два, три, четыре, пять .... Это не всё?"

В процессе учебы один из студентов столкнулся с проблемой обработки сложной структуры данных, которая была получена в результате его работы. Студент уснул на клавиатуре, и его код остался рабочим, но запутанным.

▎Описание структуры данных

Структура данных, с которой мы работаем, выглядит следующим образом:

data_structure = [
  [1, 2, 3],
  {'a': 4, 'b': 5},
  (6, {'cube': 7, 'drum': 8}),
  "Hello",
  ((), [{(2, 'Urban', ('Urban2', 35))}])
]


▎Задача

Студент задался вопросом: "А есть ли универсальное решение для подсчёта суммы всех чисел и длин всех строк?" Необходимо разработать функцию, которая будет подсчитывать:

• Все числа (независимо от того, являются ли они ключами или значениями).

• Все строки (независимо от того, являются ли они ключами или значениями).

▎Пример

Для указанной структуры данных расчет выполняется следующим образом:

1 + 2 + 3 + len('a') + 4 + len('b') + 5 + 6 + len('cube') + 7 + ... + 35 = 99


▎Входные данные

Функция должна быть вызвана следующим образом:

data_structure = [
    [1, 2, 3],
    {'a': 4, 'b': 5},
    (6, {'cube': 7, 'drum': 8}),
    "Hello",
    ((), [{(2, 'Urban', ('Urban2', 35))}])
]

result = calculate_structure_sum(data_structure)
print(result)


▎Выходные данные

При выполнении кода в консоли вы получите:

99


▎Рекомендации

• Весь подсчет должен выполняться одним вызовом функции.

• Рекомендуется использовать рекурсивный вызов функции для обработки каждой внутренней структуры.

• Для определения типа используйте функцию isinstance.

▎Установка

1. Клонируйте репозиторий:

   git clone https://github.com/ваш_пользователь/ваш_репозиторий.git


2. Перейдите в директорию проекта:

   cd ваш_репозиторий


▎Использование

Запустите Python-скрипт с вашим кодом для выполнения функции calculate_structure_sum.

▎Лицензия

Этот проект лицензирован под MIT License. Подробности смотрите в файле LICENSE.